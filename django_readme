1)Create Project
django-admin startproject Myproject
2)Run the server
python manage.py runserver
Open tab in browser and type http://127.0.0.1:8000/admin/
3)Create admin credentails
Create Username and password for admin app
python manage.py createsuperuser
We need to create a table now as it is giving error
4)create schema(makemigrations) and execute schema on db(migrate)
python manage.py makemigrations
python manage.py migrate
Now again run this
python manage.py createsuperuser
5)Create app
python manage.py startapp home
A new folder is created
Project doesnot know about app
    1)Go to setting.py add 'home' in INSTALLED_APPS
    2)Go to urls.py, from that it will go to various apps
    3)add path('',include(home.urls)) in urls_pattern and change import path to import path,include import home.url
    #from browser url the control goes to myprog/urls (it checks for full url but if not in path list then it will break the url which will be satisfied by '' thus it will go to home/urls.pyand then to home/urls.py and admin/urls then from home/urls.py it goes to views.py and then we wrote a function def homepage
    4)Copy urls.py file from Myproject to home
    5)Change file as from django.contrib import admin
    from django.urls import path,include
    from.import views

    urlpatterns = [path('',views.homepage)]
    6)Open views.py
    from django.shortcuts import render,HttpResponse
    def homepage(request):
    return HttpResponse('Welcome')

    Now run the server

Noe add this path('about/',views.aboutpage) in home/urls.py

----------------------------------------------------------------------------------------------------------
1)Make a templates directory in login
make a html file named login.html and write
<form action='/login/verify/' method='POST'>
            Username:<input type='text' name='uname'/><br/>
            Password:<input type='password' name='pw'/><br/>
            <input type='submit' value='LOGIN'/>
            </form>

Go to login/views.py
type return render(request,'login.html',{}) instead of return httpresponse

2)We need to create table using model
Go to login/model.py
write
from django.db import models
class AccountModel(models.Model):
    user=models.CharField(max_length=100)
    pwd=models.CharField(max_length=100)
    class Meta:
        db_table='user_details'

Then run these lines
python manage.py makemigrations
python manage.py migrate
then check in db browser a table is made

3)We want this table to be viewed on admin page
go to login/admin.py
write
from .models import AccountModel
admin.site.register(AccountModel)
Go to /admin and u can see model there and add one username and passsword


4)Now add this to model.py
    def __str__(self): #This is written as if we make any changes to Model we dont have to write migrations
        return self.user

5)A username and password will be searched in db and if not found we will add one
Add path('verify/',views.verifypage) to login/urls path
We are getting an error CSRF thts becoz it creates a new token so we add
{%csrf_token%} after form tag in html file
Now no error will be there


6)Now we will try to retrive username and password and if it is not present in db we create one
Go to login/views
Comment out the httpresponse and write
def verifypage(request):
    #return HttpResponse('Verified')
    if request.method=='POST':
        u=request.POST.get('uname')
        p = request.POST.get('pw')
        from .models import AccountModel as AM
        try:
            AM.object.get(user=u)
            return HttpResponse('Login Success')
        except:
            a=AM()
            a.user=u
            a.pwd=p
            a.save()
            return HttpResponse('Account Created ')

 h  




